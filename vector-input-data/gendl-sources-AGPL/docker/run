#!/bin/bash
#
# this will start a Swank listening on port $SWANK_PORT and expose that to the host.
#
# So you can do M-x slime-connect  to localhost on port $SWANK_PORT (e.g. 5200).
#
#  (prerequisite:  docker and Gnu emacs with slime).
#


# You can change or preset before running this script USER_SRC to the
# source directory you want to use inside the container.

CURRDIR=`dirname $0`

if [[ "$*" == *"--sbcl"* ]]; then
    impl="sbcl"
    offset=2 # add 2 offset for each HOST_PORT for sbcl
else
    impl="ccl"
    offset=1 # add 1 offset for each HOST_PORT for ccl
fi

# You can change or preset any of the below to customize the various
# ports used for services:

export HTTP_PORT=${HTTP_PORT:-9080}
export HTTPS_PORT=${HTTPS_PORT:-9443}
export SWANK_PORT=${SWANK_PORT:-4200}
export TELNET_PORT=${TELNET_PORT:-4023}

export HTTP_HOST_PORT=$((HTTP_PORT + offset))
export HTTPS_HOST_PORT=$((HTTPS_PORT + offset))
export SWANK_HOST_PORT=$((SWANK_PORT + offset))
export TELNET_HOST_PORT=$((TELNET_PORT + offset))

export START_HTTP=${START_HTTP:-true}
#export START_HTTP=${START_HTTP:-false}
export START_HTTPS=${START_HTTPS:-false}
export START_SWANK=${START_SWANK:-true}
#export START_SWANK=${START_SWANK:-false}
export START_TELNET=${START_TELNET:-false}


USER_SRC=${USER_SRC:-"`cd "${CURRDIR}/../../"; pwd`/"}

cd ${CURRDIR}

#
# Below here should not need to be changed.
#

SRC_BASENAME="$(basename $USER_SRC)"

if ! [ -z ${USER_ALT} ]; then
    ALT_BASENAME="$(basename $USER_ALT)"
fi


HOST_USER_UID=$(id -u)
HOST_USER_NAME=${USER}

gendl_user="gendl-user"

branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null); ret_code=$?; branch=${branch//\//--}
if [ "$ret_code" -ne "0" ];
then
    branch="unspecified"
fi


echo "impl: $impl"
gendl_container=$(docker ps -q --filter name=gendl-${impl})

echo gendl_container: ${gendl_container}

if ! [ -z ${gendl_container} ];
then
    echo "Container gendl already exists.  Stop it and start a new one? (Y/n)"
    read y_or_n
    if [ -z ${y_or_n} ]  || [ ${y_or_n} = "Y" ] || [ ${y_or_n} = "y" ];
    then
        echo "Stopping existing container gendl..."
        docker stop gendl-${impl} > /dev/null
        echo "Done."
    else
        echo "Ok then. Please feel free to stop the gendl container and try again."
        exit 1
    fi
fi


docker pull dcooper8/gendl:${branch}-${impl} 2> /dev/null || true

echo ""
echo "Starting container with following environmental values:"
echo ""
echo "SWANK_HOST_PORT=${SWANK_HOST_PORT}"
echo "SWANK_PORT=${SWANK_PORT}"
echo "HTTP_HOST_PORT=${HTTP_HOST_PORT}"
echo "HTTP_PORT=${HTTP_PORT}"
echo "HTTPS_HOST_PORT=${HTTPS_HOST_PORT}"
echo "HTTPS_PORT=${HTTPS_PORT}"
echo "TELNET_HOST_PORT=${TELNET_HOST_PORT}"
echo "TELNET_PORT=${TELNET_PORT}"
echo "START_SWANK=${START_SWANK}"
echo "START_HTTP=${START_HTTP}"
echo "START_HTTPS=${START_HTTPS}"
echo "START_TELNET=${START_TELNET}"
echo "USER_SRC=${USER_SRC}"
echo "SRC_BASENAME=${SRC_BASENAME}"
echo "gendl_user=${gendl_user}"



DOCKER_MOUNT_OPTIONS="--mount type=bind,src=${USER_SRC},dst=/home/${gendl_user}/${SRC_BASENAME}/"
if ! [ -z ${USER_ALT} ];
then
    DOCKER_MOUNT_OPTIONS="${DOCKER_MOUNT_OPTIONS} --mount type=bind,src=${USER_ALT},dst=/home/${gendl_user}/${ALT_BASENAME}/"
fi


DOCKER_GENDL_CID=$(docker run -id --rm -h gendl --name gendl-${impl}  \
                          -p ${SWANK_HOST_PORT}:${SWANK_PORT} -p ${HTTP_HOST_PORT}:${HTTP_PORT} \
                          -p ${HTTPS_HOST_PORT}:${HTTPS_PORT} \
                          -e HTTP_PORT -e HTTPS_PORT -e SWANK_PORT -e TELNET_PORT \
                          -e HTTP_HOST_PORT -e HTTPS_HOST_PORT \
                          -e SWANK_HOST_PORT -e TELNET_HOST_PORT \
                          -e START_HTTP -e START_HTTPS -e START_SWANK -e START_TELNET \
                          -e HOST_USER_UID \
                          ${DOCKER_MOUNT_OPTIONS} \
                          --add-host host.docker.internal:172.17.0.1 \
                          dcooper8/gendl:${branch}-${impl})

if [ -z "$DOCKER_GENDL_CID" ]
then
    echo ""
    echo "Container did not start sucessfully, perhaps a name conflict with a running container?"
    echo "Maybe try the ./stop script in this directory."
    echo ""
else

    #
    # Uncomment the following to have your ~/.ssh copied into the container.
    #

    #    if [ -e ~/.ssh/ ];
    #    then
    #        echo "Copying your ~/.ssh/ directory into the container as /home/${gendl_user}/.ssh/"
    #        docker cp ~/.ssh ${DOCKER_GENDL_CID}:/home/${gendl_user}/.ssh
    #        docker exec -it --user root ${DOCKER_GENDL_CID} chown -R ${gendl_user}:${gendl_user} /home/${gendl_user}/.ssh
    #    fi

#    echo "Making a symbolic link from /home/${HOST_USER_NAME}/ to /home/${gendl_user}/ "
#    echo "so the container will recognize paths given from emacs/slime under your /home/${gendl_user}/${SRC_BASENAME}/"
#    echo "mount when you access them on the host under /home/${HOST_USER_NAME}/..."
#    if [ ${gendl_user} != ${HOST_USER_NAME} ];
#       then
#           docker exec -it --user root ${DOCKER_GENDL_CID} ln -s /home/${gendl_user} /home/${HOST_USER_NAME}
#    fi


    echo ""
    echo "New container has been started and ${USER_SRC} from this host has been mounted to:"
    echo "/home/${gendl_user}/${SRC_BASENAME}/ in the container."
    echo ""
    echo "The new container ID is ${DOCKER_GENDL_CID}."
    echo ""
    if [[ ! "${START_SWANK}" == "false" ]]; then
        echo "If you need slime loaded into your emacs, you can get it with:"
        echo "M-x load-file RET ${GENDL_SRC}/docker/slime/slime.el RET"
        echo ""
        echo "Swank is listening on port ${SWANK_HOST_PORT} on the host, so you can connect from emacs (after loading slime) with:"
        echo ""
        echo "M-x slime-connect RET localhost RET ${SWANK_HOST_PORT} RET"
        echo ""
    fi
    echo "Container ID is:"
    echo ""
    echo ${DOCKER_GENDL_CID}
fi
