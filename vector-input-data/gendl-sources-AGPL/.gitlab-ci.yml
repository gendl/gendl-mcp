stages:
  - update
  - rsync
  - build
  - containerize
  - testing
  - deploy

# Define a variable to control whether Windows stages should run
variables:
#  WINDOWS_ENABLED: "false"  # Set to "true" to enable Windows stages
  WINDOWS_ENABLED: "true"  # Set to "true" to enable Windows stages

update:
  tags:
    - genworks-builder
  stage: update
  script:
    - bash -x ./.ci-script.sh linux git-pull

windows-update:
  tags:
    - genworks-builder
  stage: rsync
  script:
    - bash -x ./.ci-script.sh windows rsync-from-manager
  rules:
    - if: '$WINDOWS_ENABLED == "true"'  # Run only if Windows is enabled

linux-build:
  tags:
    - genworks-builder
  stage: build
  script:
    - bash -x ./.ci-script.sh linux build-gendl-ccl
    - bash -x ./.ci-script.sh linux build-gendl-sbcl

windows-build:
  tags:
    - genworks-builder
  stage: build
  script:
    - bash -x ./.ci-script.sh windows build-gendl-ccl
    - bash -x ./.ci-script.sh windows build-gendl-sbcl
  rules:
    - if: '$WINDOWS_ENABLED == "true"'  # Run only if Windows is enabled

containerize:
  tags:
    - genworks-builder
  stage: containerize
  needs: ["linux-build"]
  script:
    - bash -x ./docker/build

quick-test:
  tags:
    - genworks-builder
  stage: testing
  needs: ["containerize"]
  script:
    - bash -x ./docker/pipeline-tests

linux-deploy:
  stage: deploy
  tags:
    - genworks-builder
  needs: ["quick-test"]
  script:
    - bash -x ./.ci-script.sh linux upload-gendl-with-s3

windows-deploy:
  stage: deploy
  tags:
    - genworks-builder
  needs: ["windows-build"]
  script:
    - bash -x ./.ci-script.sh windows upload-gendl-with-s3
  rules:
    - if: '$WINDOWS_ENABLED == "true"'  # Run only if Windows is enabled
