(in-package :email-gateway)

;;
;; FLAG -- make a generic email sending mixin
;;

(define-object thank-you-page (training-common:base-site-mixin)

  :input-slots (email-address human? opt-in?  (admin-address "david.cooper@genworks.com"))


  :computed-slots
  ((new-page-url (the sender new-page-url))
   (smtp-host "gornschool.com")
   (from-address "schoolmaster@gornschool.com")
   (to-address (the email-address))
   (subject "Your Personal Link for the GendL Tutorial")


   (email-body (if (the sender new-page-url)
                   (format nil

                           "Dear ~a,

Thank you for your interest in the GendL Tutorial.

Please follow or copy/paste the below link for your session:

~a://~a~a~a

And please have fun learning!
               "
                           (the email-address)
                           (if *https-server* "https" "http")
                           "gornschool.com" ;; flag compute the host
                           (let ((port (gwl::server-port :server (or *https-server* *http-server*))))
                             (if (or (= port 443) (= port 80))  "" (format nil ":~a" port)))
                           (the new-page-url))
                   (format nil

                           "
There was a problem (on our end) processing your new Tutorial session. Please try again later.")))

   ;; this is page content not email body (email body is above).
   (body-content (with-cl-who-string ()
                   (:p (fmt "Thank you. An email from \"schoolmaster\" @gornschool.com has been sent to ~a." (the email-address)))
                   (:p "Please check it for a link to your session.")
                   (:p "Note that despite our best attempts, the mail might end up in your
Spam folder. So if you don't see it, please check there and report to your mail host as
Not Spam if possible. Thanks again.")))

   (email-error? nil :settable)
   (email-sent? nil :settable))

  :objects ((sender :type 'email-sender
                    :email-address (the email-address)
                    :opt-in? (the opt-in?)
                    :body (the email-body)
                    :pass-down (human? smtp-host from-address to-address admin-address subject)))

  :functions ((before-present! () (the new-page-url) (the sender send!))))
