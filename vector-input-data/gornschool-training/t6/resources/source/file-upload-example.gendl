(in-package :gwl-user)

(defparameter *testing* t)

(define-object upload-file (base-html-page)

  :computed-slots
  ((uploaded-path "" :settable)
   (output "" :settable)


   (main-sheet-body (with-lhtml-string ()
		      (when *testing* (str (the development-links)))
		      (str (the timing-type-section main-div))
		      (str (the lap-split-form-section main-div)))))

  :functions
  ((after-set! ()

               (print-variables (the query-plist))
                                
	       ;; the test load button is only defined when *testing* is T
	       (cond 
		     
		     ((member "Upload" (the query-plist) :test 'string-equal)
		      (print-variables (the uploaded-path))
		      (if (> (length (the uploaded-path)) 0)
			  (the (set-slot!
                                :output (format nil "The file has been uploaded to ~a"
                                                (the uploaded-path))))       
			  (the (set-slot! :output "No file uploaded")))))))

  :objects
  ((lap-timing
    :type 'menu-form-control
    :choice-plist
    (list :ipad-split "Track Split Stopwatch Upload"
          :equal-split "Equally Split from Laps"
          :manual-split "Manually entered splits"
          :no-split "No Lap Split" :aerodrome-splits "Aerodrome Splits")
    :size 1
    :default :ipad-split
    :prompt "Lap Timing"
    :ajax-submit-on-change? t)

  (timing-type-section :type 'sheet-section
			:inner-html (with-cl-who-string ()
				      ((:table :class "noborder")
				       ((:tr :class "noborder")
					((:td :class "noborder")
                                         (str (the lap-timing prompt)))
					((:td :class "noborder")
                                         (str (the lap-timing form-control)))))))

  (lap-split-data :type 'text-form-control
		   :rows 12
		   :size 70
		   :prompt "Lap Split data"
		  :default nil)
  
  (number-of-laps :type 'number-form-control
		   :size 10
		   :prompt "Laps"
		   :ajax-submit-on-change? t
		  :default 1)
  (total-time :type 'number-form-control
	       :size 10
	       :step 0.01
	       :prompt "Estimated Total Duration"
	       :default 60)

  (lap-split-form-section :type 'lap-split-form-section
                          :requestor self
			  :timing-key (the lap-timing value)
			  :lap-split-data (the lap-split-data)
			  :number-of-laps (the number-of-laps)
			  :total-time (the total-time))))


(define-object lap-split-form-section (sheet-section)
  :input-slots
  (requestor
   timing-key
   lap-split-data
   number-of-laps
   total-time
   )
  
  :computed-slots
  ((inner-html (with-lhtml-string ()
		 (htm ((:table :class "noborder")
		       (ecase (the timing-key)
			 (:ipad-split
			  (htm 
			   ((:tr :class "noborder")
			    ((:td :class "noborder")
                             (str (the lap-split-data prompt)))
			    ((:td :class "noborder")
                             (str (the lap-split-data form-control))))))
			     
			 (:equal-split
			  (htm
			   ((:tr :class "noborder")
			    ((:td  :class "noborder")(str (the number-of-laps prompt)))
			    ((:td  :class "noborder")(str (the number-of-laps form-control))))
			   ((:tr :class "noborder")
			    ((:td :class "noborder") (str (the total-time prompt)))
			    ((:td  :class "noborder")(str (the total-time form-control))))))

                         (:aerodrome-splits
                          (htm
                           (:tr
                            (:td
			     (str (with-form-string (:enctype  "multipart/form-data"
                                                     :requestor (the requestor))
				    (:input :type "file" :name :uploaded-path)
				    (:input :type "submit" :name "upload" :value "Upload")
                                    (:p (str (the requestor uploaded-path)))))))))
                         
                         #+nil
			 (:aerodrome-splits
			  (str (with-form-string (:enctype  "multipart/form-data"
                                                  :requestor (the requestor))
<<<<<<< HEAD
				 ((:table :class "noborder")
				  (:tr ((:td :class "noborder")
                                        ((:input :type "file" :name :uploaded-path)))
				       ((:td :class "noborder")
                                        ((:input :type "submit"
                                                 :name "upload" :value "Upload"))))
                                  (:tr ((:td :class "noborder" :span 2)
                                        (str (the requestor uploaded-path))))))))
=======
				 (:table :class "noborder"
				   (:tr (:td :class "noborder" (:input :type "file" :name :uploaded-path))
				        (:td :class "noborder" (:input :type "submit" :name "upload" :value "Upload")))
                                   (:tr (:td :colspan 2 :class "noborder"
                                             (str (the requestor uploaded-path))))))))
>>>>>>> dc02addf6882a711a051fb50ad20b2e9071b6438

                         ((:manual-split :no-split)
                          (htm (:p "Coming Soon"))))))))))


(with-all-servers (server)
		  (publish-gwl-app "/upload" "gwl-user::upload-file" :server server))
